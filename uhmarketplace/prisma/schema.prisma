// Anytime you make a change to this prisma file, you must run "npx prisma generate" in your terminal to keep the database up to date
// You can also run "npx prisma db pull" to ensure the Prisma schema is up to date. 
// Anytime you make a change to this prisma file, you must run "npx prisma generate" in your terminal to keep the database up to date
// You can also run "npx prisma db pull" to ensure the Prisma schema is up to date. 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  name           String
  hashedPassword String
  emailVerified DateTime?
  profilePicUrl String @default("https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png?20150327203541")
  posts Post[]
  role Role @default(USER)
  @@unique([email, name])
  passwordResets   PasswordReset[] // Define the reverse relation to PasswordReset
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  token     String  
  expiresAt DateTime
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}


model VerificationToken {
  id      Int      @id @default(autoincrement())
  email   String
  token   String
  expires DateTime

  @@unique([email, token])
}

model Post {
  id Int @id@default(autoincrement())
  price Decimal @db.Decimal(9,2)
  title String
  description String
  createdBy User @relation(fields: [authorEmail, authorName], references: [email, name])
  createdAt DateTime  @default(now())
  updatedAt DateTime @default(now())
  imageUrl String @default("https://media.istockphoto.com/id/1147544807/vector/thumbnail-image-vector-graphic.jpg?s=612x612&w=0&k=20&c=rnCKVbdxqkjlcs3xH87-9gocETqpspHFXu5dIGB4wuM=")
  authorEmail String
  authorName String
}

enum Role {
  USER
  ADMIN
}